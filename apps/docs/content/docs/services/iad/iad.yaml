openapi: 3.1.1
info:
  title: IAD (Injection Attack Detection) Services API
  description: |
    This API, in the face capture and evaluation context, allows the detection of:
    
    **Attack vectors**: virtual cameras, external devices, browser attacks, network attacks.
    
    **Attack content**: 3D rendering, face morphing, face swap, cheap fake, deep fake.
    
    This API requires client-side integration of the IAD capture libraries. The IAD capture library (included in Selphi™) controls the capture process on the client and makes the IAD bundle (encrypted bundle of metadata and images).
    
    The API knows how to unpack the IAD bundle from the client to perform both injection attack detection and presentation attack detection.
    
  version: 1.0.0
  contact:
    name: FacePhi Support
    email: support@facephi.com
servers:
  - url: '{IDENTITY_API_BASE_URL}'
    description: Identity API Base URL
    variables:
      IDENTITY_API_BASE_URL:
        default: 'https://api.identity-platform.io'
security:
  - apiKey: []
tags:
  - name: IAD
    description: Injection Attack Detection services
paths:
  '/iad':
    post:
      tags:
        - IAD
      summary: Injection Attack Detection
      description: |
        Injection and presentation attack detection service. This endpoint analyzes encrypted bundles from IAD capture libraries to detect various attack vectors and content manipulations.
        
        **Supported Operations:**
        - Injection Attack Detection: injection and presentation attack detection
        
        **Client Integration Required:**
        This API requires client-side integration of the IAD capture libraries. The IAD capture library (included in Selphi™) controls the capture process and generates the encrypted IAD bundle.
      operationId: injectionAttackDetection
      requestBody:
        description: Encrypted bundle of metadata and images generated by IAD capture library
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
              description: IAD_BUNDLE - Encrypted bundle of metadata and images. Bundle should be sent as an application/octet-stream request.
      responses:
        '200':
          description: Attack detection analysis completed successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - attack
                properties:
                  attack:
                    type: boolean
                    description: Boolean value indicating whether an attack has been detected. true = attack detected, false = no attack detected
                    example: true
              example:
                attack: true
        '400':
          description: Bad Request - Invalid request or processing error
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - title
                  - detail
                  - type
                  - errors
                properties:
                  status:
                    type: integer
                    example: 400
                  title:
                    type: string
                    example: "Bad Request"
                  detail:
                    type: string
                    example: "Invalid request."
                  type:
                    type: string
                    example: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/400"
                  errors:
                    type: array
                    items:
                      type: string
                    example: ["FACE_ANGLE_TOO_LARGE: Facial out-of-plane rotation angle is extremely large"]
              examples:
                FaceNotFound:
                  summary: No faces detected
                  value:
                    status: 400
                    title: "Bad Request"
                    detail: "Face not found"
                    type: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/400"
                    errors: ["FACE_NOT_FOUND: No faces have been detected in the image."]
                FaceCropped:
                  summary: Face partially outside image
                  value:
                    status: 400
                    title: "Bad Request"
                    detail: "Face is cropped"
                    type: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/400"
                    errors: ["FACE_CROPPED: Face is only partially inside the image."]
                FaceOccluded:
                  summary: Face partially hidden
                  value:
                    status: 400
                    title: "Bad Request"
                    detail: "Face is occluded"
                    type: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/400"
                    errors: ["FACE_IS_OCCLUDED: Face is being partially hidden behind an object."]
                TooManyFaces:
                  summary: Multiple faces detected
                  value:
                    status: 400
                    title: "Bad Request"
                    detail: "Too many faces detected"
                    type: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/400"
                    errors: ["TOO_MANY_FACES: More than one face is visible in the image."]
                FaceAngleTooLarge:
                  summary: Face angle too extreme
                  value:
                    status: 400
                    title: "Bad Request"
                    detail: "Facial out-of-plane rotation angle is extremely large"
                    type: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/400"
                    errors: ["FACE_ANGLE_TOO_LARGE: Angle of the face corresponding to camera view point is too large."]
                FaceTooSmallAbsolute:
                  summary: Face pixel density too low
                  value:
                    status: 400
                    title: "Bad Request"
                    detail: "Absolute face size is too small"
                    type: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/400"
                    errors: ["FACE_TOO_SMALL: Face pixel density is too small, it should be closer to the camera view point or image should be higher resolution."]
                FaceTooSmallRelative:
                  summary: Face occupies too little of image
                  value:
                    status: 400
                    title: "Bad Request"
                    detail: "Relative face size is too small"
                    type: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/400"
                    errors: ["FACE_TOO_SMALL: Face is too small, it should be closer to the camera view point, so it occupies a higher portion of the image."]
                FaceCloseToBorder:
                  summary: Face too close to image border
                  value:
                    status: 400
                    title: "Bad Request"
                    detail: "Face is too close to one or more borders"
                    type: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/400"
                    errors: ["FACE_CLOSE_TO_BORDER: Face is too close to the limit of the camera's view point, it should be centered corresponding with camera view."]
                ParseError:
                  summary: File parsing failed
                  value:
                    status: 400
                    title: "Bad Request"
                    detail: "Failed to parse file"
                    type: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/400"
                    errors: ["UNKNOWN: File is not a correct encrypted blob payload or is corrupted."]
                MetadataError:
                  summary: Metadata reading failed
                  value:
                    status: 400
                    title: "Bad Request"
                    detail: "Failed to read metadata"
                    type: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/400"
                    errors: ["UNKNOWN: Encrypted blob data is not generated with the correct format."]
                DecryptionError:
                  summary: Decryption failed
                  value:
                    status: 400
                    title: "Bad Request"
                    detail: "Failed to decrypt message"
                    type: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/400"
                    errors: ["UNKNOWN: Wrong public-private key pair is set on server and capture library."]
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayError'
        '504':
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutError'
      security:
        - apiKey: []
components:
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: x-api-key
      description: API key for authentication
  schemas:
    UnauthorizedError:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: "Unauthorized"
    ForbiddenError:
      type: object
      required:
        - Message
      properties:
        Message:
          type: string
          example: "User is not authorized to access this resource with an explicit deny"
    BadGatewayError:
      type: object
      required:
        - status
        - title
        - detail
        - type
      properties:
        status:
          type: integer
          example: 502
        title:
          type: string
          example: "Bad Gateway"
        detail:
          type: string
          example: "Server got an invalid response."
        type:
          type: string
          example: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/502"
    GatewayTimeoutError:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: "Endpoint request timed out"