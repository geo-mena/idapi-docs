openapi: 3.1.1
info:
  title: OCR Services API
  description: |
    The OCR Services API provides optical character recognition capabilities for identification documents.
    
    ## Features
    
    * **Document Data Extraction**: Extract all data from identification documents using OCR
    * **MRZ Processing**: Process Machine Readable Zone codes
    * **Barcode/PDF Support**: Extract data from various document formats
    * **Multi-country Support**: Support for different document models by country
    
  version: 1.0.0
  contact:
    name: FacePhi Support
    email: support@facephi.com
servers:
  - url: '{IDENTITY_API_BASE_URL}'
    description: Identity API Base URL
    variables:
      IDENTITY_API_BASE_URL:
        default: 'https://api.identity-platform.io'
security:
  - apiKey: []
tags:
  - name: OCR
    description: Optical character recognition services for document processing
paths:
  '/services/extractDocumentDataWeb':
    post:
      tags:
        - OCR
      summary: Extract Document Data Web
      description: |
        This service returns all the data extracted from an identification document by applying OCR to MRZ code, PDF, Barcode, and visible fields in other areas of the document according to the model defined for each country. For passports, OCR is exclusively applied to the MRZ code due to its standardized format.
      
        **Integration**: This service is used for implementations of the **SelphID Web Widget** or for sending open images from any platform. When using the SelphID Web widget, the images generated by the widget are retrieved from an array of images.
      operationId: extractDocumentDataWeb
      requestBody:
        description: Document images and configuration for OCR processing
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtractDocumentDataWebRequest'
            example:
              tokenFrontDocument: "{TOKEN_FRONT_DOCUMENT}"
              tokenBackDocument: "{TOKEN_BACK_DOCUMENT}"
              countryCode: "{COUNTRY_CODE}"
              decompose: false
              tracking:
                extraData: "{EXTRA_DATA}"
                operationId: "{OPERATION_ID}"
      responses:
        '200':
          description: Document data extracted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtractDocumentDataWebResponse'
              example:
                serviceResultCode: 0
                serviceResultLog: "Service request successfully processed"
                serviceTime: "2237"
                serviceDocument: "{\"ASK4BACK\":\"NO\",\"BACKSIDE\":{\"FIELD_DATA\":{\"BARCODES\":[{\"DATA\":\"\",\"TYPE\":\"\"}]},\"MRZ_DATA\":{\"BIRTH_DATE\":\"01/01/1980\",\"EXPEDITION_DATE\":\"01/01/2020\",\"EXPIRATION_DATE\":\"01/01/2030\",\"IDENTITY_NUMBER\":\"123\",\"ISSUING_COUNTRY\":\"XYZ\",\"NAME\":\"JOHN\",\"NATIONALITY\":\"XYZ\",\"PERSONAL_NUMBER\":\"12345678\",\"SERIAL_NUMBER\":\"000000001\",\"SURNAME\":\"DOE\"}},\"CHECKS\":{\"BIRTH_DATE_SIDE_MATCH\":true,\"EXPEDITION_DATE_SIDE_MATCH\":true,\"EXPIRATION_DATE_SIDE_MATCH\":true,\"NAME_SIDE_MATCH\":true,\"NATIONALITY_SIDE_MATCH\":true,\"SURNAME_SIDE_MATCH\":true},\"COUNTRY_CODE\":\"XYZ\",\"DECOMPOSED\":{\"FACE\":\"/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/p3Vg7fMCvXH/66ujh6VJXhFfkzHE4rEYqV6kmz/9k=...\"},\"DOC_MODEL\":\"NEW\",\"FRONTSIDE\":{\"FIELD_DATA\":{\"BIRTH_DATE\":\"01/01/1980\",\"BIRTH_PLACE\":\"SOMEPLACE/XYZ\",\"DOCUMENT_NUMBER\":\"1.234.567-8\",\"EXPEDITION_DATE\":\"01/01/2020\",\"EXPIRATION_DATE\":\"01/01/2030\",\"NAME\":\"JOHN\",\"NATIONALITY\":\"XYZ\",\"SURNAME\":\"DOE\"}},\"SCORING\":{\"BACK_CONFIDENCE\":0.927620202303,\"BACK_SHA256\":\"0f8b53d5724a186cf19c882baa20eb92fa6e1708065987a32ecbf0141a86e6a5\",\"FIELDS_RETURNED\":27,\"FIELDS_TOTAL\":27,\"FRONT_CONFIDENCE\":0.97401304245,\"FRONT_SHA256\":\"a3dccd459f4674ec8440a11c7c65ab0e1ebaa5fd8357b55484574e71116bef2c\",\"OVERALL_RATING\":100.0}}"
                serviceTransactionId: "123e4567-e89b-12d3-a456-426614174000"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  title:
                    type: string
                    example: "Bad Request"
                  detail:
                    type: string
                    example: "Invalid request."
                  type:
                    type: string
                    example: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/400"
                  errors:
                    type: array
                    example: []
              example:
                status: 400
                title: "Bad Request"
                detail: "Invalid request."
                type: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/400"
                errors: []
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized"
              example:
                message: "Unauthorized"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  Message:
                    type: string
                    example: "User is not authorized to access this resource with an explicit deny"
              example:
                Message: "User is not authorized to access this resource with an explicit deny"
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 502
                  title:
                    type: string
                    example: "Bad Gateway"
                  detail:
                    type: string
                    example: "Server got an invalid response."
                  type:
                    type: string
                    example: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/502"
              example:
                status: 502
                title: "Bad Gateway"
                detail: "Server got an invalid response."
                type: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/502"
        '504':
          description: Gateway Timeout
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Endpoint request timed out"
              example:
                message: "Endpoint request timed out"
      security:
        - apiKey: []
  '/services/extractDocumentData':
    post:
      tags:
        - OCR
      summary: Extract Document Data
      description: |
        This service returns all the data extracted from an identification document by applying OCR to MRZ code, PDF, Barcode, and visible fields in other areas of the document according to the model defined for each country.
        
        **Integration**: This service is used for implementations of the **SelphID Mobile Widget** by sending the TokenOCR property generated from the widget's native function.
      operationId: extractDocumentData
      requestBody:
        description: TokenOCR data and tracking information for document processing
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtractDocumentDataRequest'
            example:
              tokenOcr: "{{tokenOcr}}"
              tracking:
                extraData: "{{extraData}}"
                operationId: "{{operationId}}"
      responses:
        '200':
          description: Document data extracted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtractDocumentDataResponse'
              example:
                serviceResultCode: 0
                serviceResultLog: "Service request successfully processed"
                serviceTime: "19"
                serviceDocument: "{\"Back/BARCODE/BarcodeData\":\"ABC123\",\"Back/BARCODE/BarcodeType\":\"Code39\",\"Back/BARCODE/DocumentData\":\"ABC123\",\"Back/INPUT/Issuer\":\"USA\",\"Back/MRZ/DateOfBirth\":\"01/01/1980\",\"Back/MRZ/DateOfExpiry\":\"01/01/2030\",\"Back/MRZ/DocumentCode\":\"P\",\"Back/MRZ/DocumentData\":\"123456789\",\"Back/MRZ/DocumentNumber\":\"987654321\",\"Back/MRZ/FirstName\":\"JOHN\",\"Back/MRZ/FullName\":\"JOHN DOE\",\"Back/MRZ/Issuer\":\"USA\",\"Back/MRZ/LastName\":\"DOE\",\"Back/MRZ/MrzText\":\"P<USA123456789987654321<<<<<<<<<<<<<\\n8001015<3001017USA<<<<<<<<<<<1\\nDOE<<JOHN<<<<<<<<<<<<<<<<<<<<<\",\"Back/MRZ/Nationality\":\"USA\",\"Back/MRZ/NfcKey\":\"123456789\",\"Back/MRZ/Opt2\":\"300101\",\"Back/MRZ/PrimaryID\":\"DOE\",\"Back/MRZ/SecondaryID\":\"JOHN\",\"Back/MRZ/Verified\":\"YES\",\"DateOfBirth\":\"01/01/1980\",\"DateOfExpiry\":\"01/01/2030\",\"DateOfIssue\":\"01/01/2020\",\"DocumentCaptured\":\"US/v2\",\"DocumentNumber\":\"987654321\",\"FirstName\":\"JOHN\",\"Front/INPUT/Issuer\":\"USA\",\"Front/ML/DateOfBirth\":\"01/01/1980\",\"Front/ML/DateOfExpiry\":\"01/01/2030\",\"Front/ML/DateOfIssue\":\"01/01/2020\",\"Front/ML/DocumentNumber\":\"987654321\",\"Front/ML/FirstName\":\"JOHN\",\"Front/ML/LastName\":\"DOE\",\"Front/ML/Nationality\":\"USA\",\"FullName\":\"JOHN DOE\",\"Issuer\":\"USA\",\"LastName\":\"DOE\",\"MatchingSidesScore\":\"1.000\",\"Nationality\":\"USA\",\"NfcKey\":\"123456789\"}"
                serviceTransactionId: "123e4567-e89b-12d3-a456-426614174000"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  title:
                    type: string
                    example: "Bad Request"
                  detail:
                    type: string
                    example: "Invalid request."
                  type:
                    type: string
                    example: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/400"
                  errors:
                    type: array
                    example: []
              example:
                status: 400
                title: "Bad Request"
                detail: "Invalid request."
                type: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/400"
                errors: []
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized"
              example:
                message: "Unauthorized"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  Message:
                    type: string
                    example: "User is not authorized to access this resource with an explicit deny"
              example:
                Message: "User is not authorized to access this resource with an explicit deny"
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 502
                  title:
                    type: string
                    example: "Bad Gateway"
                  detail:
                    type: string
                    example: "Server got an invalid response."
                  type:
                    type: string
                    example: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/502"
              example:
                status: 502
                title: "Bad Gateway"
                detail: "Server got an invalid response."
                type: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/502"
        '504':
          description: Gateway Timeout
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Endpoint request timed out"
              example:
                message: "Endpoint request timed out"
      security:
        - apiKey: []
components:
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: x-api-key
      description: API key for authentication
  schemas:
    ExtractDocumentDataWebRequest:
      type: object
      required:
        - tokenFrontDocument
        - tokenBackDocument
        - countryCode
      properties:
        tokenFrontDocument:
          type: string
          format: byte
          description: Base64 encoded image of the front side of the document, removing the mime type header.
          example: "{TOKEN_FRONT_DOCUMENT}"
        tokenBackDocument:
          type: string
          format: byte
          description: Base64 encoded image of the back side of the document, removing the mime type header.
          example: "{TOKEN_BACK_DOCUMENT}"
        countryCode:
          type: string
          description: |
            Country code in ISO 3166-1 alpha-3 format. If not present in the request body, the service will use the default country defined for the client in the API settings.

            For passport cases, only the `tokenFrontDocument` is required with `countryCode` set to "PSP".
          example: "{COUNTRY_CODE}"
        decompose:
          type: boolean
          description: Indicates whether to obtain the face image present in the document and the signature crop. (*) Consult with Latam Support team for enabled countries.
          example: false
        tracking:
          $ref: '#/components/schemas/TrackingInfo'
    ExtractDocumentDataWebResponse:
      type: object
      required:
        - serviceResultCode
        - serviceResultLog
        - serviceDocument
        - serviceTime
        - serviceTransactionId
      properties:
        serviceResultCode:
          type: integer
          description: Code indicating the overall result of the service execution. See [Service Result Code](/docs/services/serviceResultCodes#service-result-code)
          example: 0
        serviceResultLog:
          type: string
          description: Descriptive field of the service execution result. Details of the module are included in case of an error or exception.
          example: "Service request successfully processed"
        serviceDocument:
          type: string
          description: Object that represents the captured document. Its properties are all the fields extracted by the OCR process including the face image present in the document.
          example: "{\"ASK4BACK\":\"NO\",\"BACKSIDE\":{\"FIELD_DATA\":{\"BARCODES\":[{\"DATA\":\"\",\"TYPE\":\"\"}]},\"MRZ_DATA\":{\"BIRTH_DATE\":\"01/01/1980\",\"EXPEDITION_DATE\":\"01/01/2020\",\"EXPIRATION_DATE\":\"01/01/2030\",\"IDENTITY_NUMBER\":\"123\",\"ISSUING_COUNTRY\":\"XYZ\",\"NAME\":\"JOHN\",\"NATIONALITY\":\"XYZ\",\"PERSONAL_NUMBER\":\"12345678\",\"SERIAL_NUMBER\":\"000000001\",\"SURNAME\":\"DOE\"}},\"CHECKS\":{\"BIRTH_DATE_SIDE_MATCH\":true,\"EXPEDITION_DATE_SIDE_MATCH\":true,\"EXPIRATION_DATE_SIDE_MATCH\":true,\"NAME_SIDE_MATCH\":true,\"NATIONALITY_SIDE_MATCH\":true,\"SURNAME_SIDE_MATCH\":true},\"COUNTRY_CODE\":\"XYZ\",\"DECOMPOSED\":{\"FACE\":\"/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/p3Vg7fMCvXH/66ujh6VJXhFfkzHE4rEYqV6kmz/9k=...\"},\"DOC_MODEL\":\"NEW\",\"FRONTSIDE\":{\"FIELD_DATA\":{\"BIRTH_DATE\":\"01/01/1980\",\"BIRTH_PLACE\":\"SOMEPLACE/XYZ\",\"DOCUMENT_NUMBER\":\"1.234.567-8\",\"EXPEDITION_DATE\":\"01/01/2020\",\"EXPIRATION_DATE\":\"01/01/2030\",\"NAME\":\"JOHN\",\"NATIONALITY\":\"XYZ\",\"SURNAME\":\"DOE\"}},\"SCORING\":{\"BACK_CONFIDENCE\":0.927620202303,\"BACK_SHA256\":\"0f8b53d5724a186cf19c882baa20eb92fa6e1708065987a32ecbf0141a86e6a5\",\"FIELDS_RETURNED\":27,\"FIELDS_TOTAL\":27,\"FRONT_CONFIDENCE\":0.97401304245,\"FRONT_SHA256\":\"a3dccd459f4674ec8440a11c7c65ab0e1ebaa5fd8357b55484574e71116bef2c\",\"OVERALL_RATING\":100.0}}"
        serviceTime:
          type: string
          description: Total execution time of the service (milliseconds).
          example: "2237"
        serviceTransactionId:
          type: string
          description: Transaction identifier associated with the request processed by the API.
          example: "123e4567-e89b-12d3-a456-426614174000"
    TrackingInfo:
      type: object
      description: Object that represents necessary tracking information.
      properties:
        extraData:
          type: string
          format: byte
          description: Token generated by Mobile/Web SDK. Contains tokenized tracking information with Platform.
          example: "{EXTRA_DATA}"
        operationId:
          type: string
          description: Operation identifier generated by Mobile/Web SDK.
          example: "{OPERATION_ID}"
    ExtractDocumentDataRequest:
      type: object
      required:
        - tokenOcr
      properties:
        tokenOcr:
          type: string
          format: byte
          description: Token generated by the native or hybrid SelphID widget, AES256 encrypted and tokenized, sent in Base64 format. Contains the OCR result from the document capture.
          example: "{{tokenOcr}}"
        tracking:
          $ref: '#/components/schemas/TrackingInfo'
    ExtractDocumentDataResponse:
      type: object
      required:
        - serviceResultCode
        - serviceResultLog
        - serviceDocument
        - serviceTime
        - serviceTransactionId
      properties:
        serviceResultCode:
          type: integer
          description: Code indicating the overall result of the service execution. See [Service Result Code](/docs/services/serviceResultCodes#service-result-code)
          example: 0
        serviceResultLog:
          type: string
          description: Descriptive field of the service execution result. Details of the module are included in case of an error or exception.
          example: "Service request successfully processed"
        serviceDocument:
          type: string
          description: Object that represents the captured document. Its properties are all the fields extracted by the OCR process.
          example: "{\"Back/BARCODE/BarcodeData\":\"ABC123\",\"Back/BARCODE/BarcodeType\":\"Code39\",\"Back/BARCODE/DocumentData\":\"ABC123\",\"Back/INPUT/Issuer\":\"USA\",\"Back/MRZ/DateOfBirth\":\"01/01/1980\",\"Back/MRZ/DateOfExpiry\":\"01/01/2030\",\"Back/MRZ/DocumentCode\":\"P\",\"Back/MRZ/DocumentData\":\"123456789\",\"Back/MRZ/DocumentNumber\":\"987654321\",\"Back/MRZ/FirstName\":\"JOHN\",\"Back/MRZ/FullName\":\"JOHN DOE\",\"Back/MRZ/Issuer\":\"USA\",\"Back/MRZ/LastName\":\"DOE\",\"Back/MRZ/MrzText\":\"P<USA123456789987654321<<<<<<<<<<<<<\\n8001015<3001017USA<<<<<<<<<<<1\\nDOE<<JOHN<<<<<<<<<<<<<<<<<<<<<\",\"Back/MRZ/Nationality\":\"USA\",\"Back/MRZ/NfcKey\":\"123456789\",\"Back/MRZ/Opt2\":\"300101\",\"Back/MRZ/PrimaryID\":\"DOE\",\"Back/MRZ/SecondaryID\":\"JOHN\",\"Back/MRZ/Verified\":\"YES\",\"DateOfBirth\":\"01/01/1980\",\"DateOfExpiry\":\"01/01/2030\",\"DateOfIssue\":\"01/01/2020\",\"DocumentCaptured\":\"US/v2\",\"DocumentNumber\":\"987654321\",\"FirstName\":\"JOHN\",\"Front/INPUT/Issuer\":\"USA\",\"Front/ML/DateOfBirth\":\"01/01/1980\",\"Front/ML/DateOfExpiry\":\"01/01/2030\",\"Front/ML/DateOfIssue\":\"01/01/2020\",\"Front/ML/DocumentNumber\":\"987654321\",\"Front/ML/FirstName\":\"JOHN\",\"Front/ML/LastName\":\"DOE\",\"Front/ML/Nationality\":\"USA\",\"FullName\":\"JOHN DOE\",\"Issuer\":\"USA\",\"LastName\":\"DOE\",\"MatchingSidesScore\":\"1.000\",\"Nationality\":\"USA\",\"NfcKey\":\"123456789\"}"
        serviceTime:
          type: string
          description: Total execution time of the service (milliseconds).
          example: "19"
        serviceTransactionId:
          type: string
          description: Transaction identifier associated with the request processed by the API.
          example: "123e4567-e89b-12d3-a456-426614174000"