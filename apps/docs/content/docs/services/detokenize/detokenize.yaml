openapi: 3.1.1
info:
  title: Detokenize Services API
  description: |
    The Detokenize Services API provides image detokenization services for decrypting tokenized images.

    ## Features

    * **Image Detokenization**: Decrypt the best encrypted image generated by the Selphi widget
    * **Token Validation**: Process bestImageToken and transactionID from identity services
    * **Onboarding Integration**: Seamless integration with onboarding flows

  version: 1.0.0
  contact:
    name: FacePhi Support
    email: support@facephi.com
servers:
  - url: '{IDENTITY_API_BASE_URL}'
    description: Identity API Base URL
    variables:
      IDENTITY_API_BASE_URL:
        default: 'https://api.identity-platform.io'
security:
  - apiKey: []
tags:
  - name: Detokenize
    description: Image detokenization services for encrypted data processing
paths:
  '/services/detokenize':
    post:
      tags:
        - Detokenize
      summary: Detokenize Image
      description: Service exposed to detokenize the best encrypted image generated by the Selphi widget. The service must receive the `bestImageToken` string and the `transactionID` associated with the identity service, previously executed in the Onboarding flow.
      operationId: detokenizeImage
      requestBody:
        description: Detokenization request data with bestImageToken and transactionId
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetokenizeRequest'
            example:
              bestImageToken: "{BEST_IMAGE_TOKEN}"
              transactionId: "{TRANSACTION_ID}"
      responses:
        '200':
          description: Image detokenized successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetokenizeResponse'
              example:
                timestamp: "2024-03-19T12:34:28Z"
                transactionId: "238ee483-60d9-45ea-85bd-a6bc686d70b7"
                imageBuffer: "/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAMCA..."
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayError'
        '504':
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutError'
      security:
        - apiKey: []
components:
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: x-api-key
      description: API access authorization
  schemas:
    BadRequestError:
      type: object
      properties:
        status:
          type: integer
          example: 400
        title:
          type: string
          example: "Bad Request"
        detail:
          type: string
          example: "Invalid request."
        type:
          type: string
          example: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/400"
        errors:
          type: array
          example: []
    UnauthorizedError:
      type: object
      properties:
        message:
          type: string
          example: "Unauthorized"
    ForbiddenError:
      type: object
      properties:
        Message:
          type: string
          example: "User is not authorized to access this resource with an explicit deny"
    BadGatewayError:
      type: object
      properties:
        status:
          type: integer
          example: 502
        title:
          type: string
          example: "Bad Gateway"
        detail:
          type: string
          example: "Server got an invalid response."
        type:
          type: string
          example: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/502"
    GatewayTimeoutError:
      type: object
      properties:
        message:
          type: string
          example: "Endpoint request timed out"
    DetokenizeRequest:
      type: object
      required:
        - bestImageToken
        - transactionId
      properties:
        bestImageToken:
          type: string
          description: Tokenized image sent in the `bestImage` parameter of the `/identity` endpoint
          example: "{BEST_IMAGE_TOKEN}"
        transactionId:
          type: string
          description: Transaction ID associated with the Liveness module operation/validation obtained in the `/identity` endpoint response
          example: "{TRANSACTION_ID}"
    DetokenizeResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          description: Request date and time
          example: "2024-03-19T12:34:28Z"
        transactionId:
          type: string
          description: Transaction ID associated with the request processed by the API
          example: "238ee483-60d9-45ea-85bd-a6bc686d70b7"
        imageBuffer:
          type: string
          description: Decoded image in Base64 format
          example: "/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAMCA..."